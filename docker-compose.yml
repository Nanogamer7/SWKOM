services:
  paperless-rest:
    build: ./backend
    container_name: paperless-rest
    ports:
      - "8081:8081"
    environment:
      - DATABASE_URL=jdbc:postgresql://paperless-db:5432/paperlessDB
      - MINIO_URL=http://paperless-minio:9000
    volumes:
      - maven-repo:/root/.m2
    networks:
      - app-network
    depends_on:
      paperless-db:
        condition: service_healthy
      paperless-rabbitmq:
        condition: service_healthy

  paperless-web:
    build: ./frontend
    container_name: paperless-web
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      - paperless-rest

  paperless-ocr:
    build: ./ocr
    container_name: paperless-ocr
    environment:
      - MINIO_URL=http://paperless-minio:9000
    volumes:
      - maven-repo:/root/.m2
    networks:
      - app-network
    depends_on:

      paperless-rabbitmq:
        condition: service_healthy

  paperless-db:
    image: postgres:latest
    container_name: paperless-db
    environment:
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless
      POSTGRES_DB: paperlessDB
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U paperless"]
      interval: 1s
      timeout: 3s
      retries: 10

  paperless-rabbitmq:
    image: rabbitmq:management
    container_name: paperless-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
    networks:
      - app-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 1s
      timeout: 3s
      retries: 10

  paperless-minio:
    image: minio/minio:latest
    container_name: paperless-minio
    networks:
      - app-network
    volumes:
      - 'minio:/data'
    environment:
      - MINIO_ROOT_USER=paperless
      - MINIO_ROOT_PASSWORD=paperless
    command: server /data --console-address ":9090"
    ports:
      - "9000:9000"
      - "9090:9090"

volumes:
    maven-repo:
    minio:

networks:
  app-network:
    driver: bridge
