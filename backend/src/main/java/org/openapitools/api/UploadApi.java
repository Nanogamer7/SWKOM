/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.7.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package backend.src.main.java.org.openapitools.api;

import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-09-29T19:48:18.478427961+02:00[Europe/Vienna]", comments = "Generator version: 7.7.0")
@Validated
@Tag(name = "upload", description = "the upload API")
public interface UploadApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /upload : Uploads a document
     *
     * @param file  (required)
     * @param description  (optional)
     * @return Queued for processing (status code 202)
     *         or The internet said so (status code 207)
     */
    @Operation(
        operationId = "uploadPost",
        summary = "Uploads a document",
        tags = { "upload" },
        responses = {
            @ApiResponse(responseCode = "202", description = "Queued for processing"),
            @ApiResponse(responseCode = "207", description = "The internet said so")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/upload",
        consumes = { "multipart/form-data" }
    )
    
    default ResponseEntity<Void> uploadPost(
        @Parameter(name = "file", description = "", required = true) @RequestPart(value = "file", required = true) MultipartFile file,
        @Parameter(name = "description", description = "") @Valid @RequestParam(value = "description", required = false) String description
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
